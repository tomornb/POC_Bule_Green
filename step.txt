######################################################################################################
### prepare base docker imags
######################################################################################################
docker pull python:slim-bullseye
docker run -it --rm python:slim-bullseye bash

######################################################################################################
### create Docker file
######################################################################################################
FROM python:slim-bullseye

ENV http_proxy "http://10.117.4.18:8080"
ENV https_proxy "http://10.117.4.18:8080"

## install curl
RUN apt update && apt upgrade
RUN apt install curl -y

## copy script
COPY app/ app/

## Install packages
#RUN pip install flask --user
RUN pip install -r /app/requirements.txt

## Run the built product when the container launches
ENTRYPOINT python "/app/service_1.py"

######################################################################################################
### docker build imags
######################################################################################################
docker build --rm --no-cache -f "Dockerfile_Service_1" -t poc_bule_green:service_1 . 
docker build --rm --no-cache -f "Dockerfile_Service_2" -t poc_bule_green:service_2 . 

######################################################################################################
### docker run 
######################################################################################################
docker run -it --rm poc_bule_green:service_1 bash
docker run -it --rm poc_bule_green:service_2 bash

docker run --rm poc_bule_green:service_1 -p 5000:8081

docker run -d --rm -p 5000:5000  poc_bule_green:service_1 bash -c "python /app/service_1.py"
